// Generated by prisma/post-generate.ts
// run pnpm db:generate --filter=db

import { Kysely } from "kysely";
import { PlanetScaleDialect } from "kysely-planetscale";
import { createId } from '@paralleldrive/cuid2';
 
import type { ColumnType } from "kysely";
export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;
export type Timestamp = ColumnType<Date, Date | string, Date | string>;

import type { PEOPLE } from "./enums";

export type Post = {
    id: Generated<number>;
    title: string;
    content: string | null;
    published: Generated<number>;
    authorId: number;
    editor: PEOPLE | null;
};
export type User = {
    id: Generated<number>;
    email: string;
    updatedAt: Timestamp;
    deletedAt: Timestamp;
    name: string | null;
};
export type DB = {
    Post: Post;
    User: User;
};


export const db = new Kysely<DB>({
  dialect: new PlanetScaleDialect({
    url: process.env.DATABASE_URL,
  }),
  
});


export const genId = createId;
